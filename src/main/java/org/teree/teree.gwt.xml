<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit 2.4//EN"
        "http://google-web-toolkit.googlecode.com/svn/releases/2.4/distro-source/core/src/gwt-module.dtd">

<!-- GWT module definition: the rename-to attribute is used to have a shorter 
	module name that doesn't reflect the actual package structure. -->

<module rename-to="teree">

	<inherits name="org.jboss.errai.common.ErraiCommon" />
	<inherits name="org.jboss.errai.bus.ErraiBus" />
	<inherits name="org.jboss.errai.ioc.Container" />
	<inherits name="org.jboss.errai.enterprise.CDI" />

	<inherits name="com.google.gwt.xml.XML" />
	<inherits name="com.google.gwt.i18n.I18N" />

	<inherits name='com.github.gwtbootstrap.Bootstrap' />

	<inherits name="org.vectomatic.libgwtfile" />

	<extend-property name="locale" values="en" />
	<extend-property name="locale" values="cs" />

	<property-provider name="locale">
    <![CDATA[
      try {
      var locale;

      // Look for the locale as a url argument
      if (locale == null) {
        var args = location.search;
        var startLang = args.indexOf("locale=");
        if (startLang >= 0) {
          var language = args.substring(startLang);
          var begin = language.indexOf("=") + 1;
          var end = language.indexOf("&");
          if (end == -1) {
            end = language.length;
          }
          locale = language.substring(begin, end);
        }
      }

      if (locale == null) {
        // Look for the locale on the web page
        locale = __gwt_getMetaProperty("locale")
      }

      if (locale == null) {
        // Look for an override computed by other means in the selection script
        locale = $wnd['__gwt_Locale'];
      }

      if (locale == null) {
        // Use the browser's locale
        locale = navigator.browserLanguage ? navigator.browserLanguage : navigator.language;
        if (locale != null) {
           locale = locale.replace(/-/g, '_');
        }
      }
      
      if (locale == null) {
        return "en";
      }

      while (!__gwt_isKnownPropertyValue("locale",  locale)) {
        var lastIndex = locale.lastIndexOf("_");
        if (lastIndex == -1) {
              locale = "default";
          break;
        } else {
          locale = locale.substring(0,lastIndex);
        }
      }
      return locale;
    } catch(e){
      return "en";
    }
  ]]>
	</property-provider>

	<set-property name="user.agent" value="safari" />

	<replace-with class="org.teree.client.viewer.TereeValidatorFactory">
		<when-type-is class="javax.validation.ValidatorFactory" />
	</replace-with>

	<source path='client' />
	<source path='shared' />

</module>
